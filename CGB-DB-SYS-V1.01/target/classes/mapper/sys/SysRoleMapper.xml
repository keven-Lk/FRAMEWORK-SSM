<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.db.sys.dao.SysRoleDao">

	<select id="findObjects" resultType="com.db.common.vo.CheckBox">
		select id,name
		from sys_roles

	</select>

	<!-- 更新角色信息 -->
	<update id="updateObject">
		update sys_roles

		<set>
			<if test="name!=null and name!=''">
				name=#{name},
			</if>
			<if test="note!=null and note!=''">
				note=#{note},
			</if>
			<if test="modifiedUser!=null and modifiedUser!=''">
				modifiedUser=#{modifiedUser},
			</if>
			modifiedTime=now()
		</set>
		where id=#{id}

	</update>

	<!-- 把结果映射存入到resultMap -->
	<resultMap type="com.db.sys.vo.SysRoleMenuVo" id="roleMenuVo">
		<!-- one2many 关系查询,基于角色id查询菜单id -->
		<collection property="menuIds" column="id"
			select="com.db.sys.dao.SysRoleMenuDao.findMenuIdsByRoleId">
		</collection>
	</resultMap>

	<!-- select中的resultMap对应的ResultMap元素的id, select中发resultType对应某个对象类型或对象类型的别名 
		说明:当需要我们自己指定映射规则时,可以使用resultMap -->
	<select id="findObjectById" resultMap="roleMenuVo">
		select id,name,note from
		sys_roles where id = #{id}
	</select>

	<!-- 通过sql元素可以定义一个sql片段,其它地方使用到了可以直接包含 -->
	<sql id="queryWhereId">
		<if test="name!=null and name!=''">
			where name like concat("%",#{name},"%")
		</if>
	</sql>
	<select id="getRowCount" resultType="int">
		select count(*)
		from sys_roles
		<include refid="queryWhereId" />
	</select>

	<select id="findPageObjects"
		resultType="com.db.sys.entity.SysRole">
		select *
		from sys_roles
		<include refid="queryWhereId" />
		limit #{startIndex},#{pageSize}
	</select>

	<delete id="deleteObject" parameterType="int">
		delete from sys_roles
		where id = #{id}
	</delete>

	<!-- userGenerateKeys表示使用insert操作的自增长主键值 keyProperty表示要将自增长值赋值给参数对象的哪个参数 -->
	<insert id="insertObject"
		parameterType="com.db.sys.entity.SysRole" useGeneratedKeys="true"
		keyProperty="id">
		insert into sys_roles
		(id,name,note,createdTime,modifiedTime,
		createdUser,modifiedUser)
		values
		(null,#{name},#{note},now(),now(),
		#{createdUser},#{modifiedUser})
	</insert>
</mapper>
